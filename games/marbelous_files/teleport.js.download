// allow editor to specify entity name as teleport target
pc.script.attribute('targetName', 'string', '', {
    displayName: 'Target Entity'
});

pc.script.create('teleport', function (app) {
    var Teleport = function (entity) {
        this.entity = entity;
    };

    Teleport.prototype = {
        initialize: function () {
            this.eY = 0.05;
            this.canTeleport = true;
            this.target = app.root.findByName(this.targetName);
            this.teleport = false;
            
            if (this.target)
                this.entity.collision.on('triggerenter', this.onScale, this);
        },
        
        onTriggerEnter: function(entity) {
            // it is not teleportable
            if (! entity.script.teleportable)
                return;
            // teleport entity to portals target
            entity.script.teleportable.teleport(this.entity, this.target);
        },
        
        onScale: function(){
            this.teleport = true;
            app.context.root.findByName('soundeffects2').audiosource.play('Teleport');
            this.onTriggerEnter(app.context.root.findByName('ball'));
        },
        
        
        update: function(dt){
            if(this.teleport === true){
                this.eY += 0.5;
                this.entity.setLocalScale(0.5,this.eY,0.5);
                this.target.setLocalScale(0.5,this.eY,0.5);
            }
            if(this.teleport === false){
                if(this.eY > 0.05){
                    this.eY -= 0.5;
                }
                this.entity.setLocalScale(0.5,this.eY,0.5);
                this.target.setLocalScale(0.5,this.eY,0.5);
            }
            if(this.eY == 6.05){
                this.teleport = false;
            }
            
        }
    };

    return Teleport;
});